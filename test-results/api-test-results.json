{
  "collection": {
    "_": {
      "postman_id": "bytestore-api-tests"
    },
    "item": [
      {
        "id": "b6b2ff18-390b-456a-be4a-09f651bb797a",
        "name": "üîê Authentication",
        "item": [
          {
            "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
            "name": "Register User",
            "request": {
              "url": {
                "path": [
                  "sign-up"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status code is 201', function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "pm.test('Response has user data', function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('data');",
                    "    pm.expect(jsonData.data).to.have.property('id');",
                    "    pm.expect(jsonData.data).to.have.property('email');",
                    "    pm.expect(jsonData.data).to.have.property('role');",
                    "});"
                  ],
                  "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
                }
              }
            ]
          },
          {
            "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
            "name": "Login User",
            "request": {
              "url": {
                "path": [
                  "sign-in"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status code is 200', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response has token and user data', function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.data).to.have.property('token');",
                    "    pm.expect(jsonData.data).to.have.property('id');",
                    "    pm.expect(jsonData.data).to.have.property('role');",
                    "    ",
                    "    // Guardar token y datos del usuario",
                    "    pm.environment.set('auth_token', jsonData.data.token);",
                    "    pm.environment.set('user_id', jsonData.data.id);",
                    "    pm.environment.set('user_role', jsonData.data.role);",
                    "});",
                    "",
                    "pm.test('Token is valid JWT format', function () {",
                    "    var jsonData = pm.response.json();",
                    "    var token = jsonData.data.token;",
                    "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                    "});"
                  ],
                  "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
                }
              }
            ]
          },
          {
            "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
            "name": "Login Invalid Credentials",
            "request": {
              "url": {
                "path": [
                  "sign-in"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3cf30a1d-f8cc-45c9-9ebf-816231a47244",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status code is 401 or 404', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
                    "});",
                    "",
                    "pm.test('Response has error message', function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('message');",
                    "});"
                  ],
                  "_lastExecutionId": "9b8f4bef-8e95-4e77-bcdd-f8bf9611a9e3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d545d167-f18b-43fd-a850-f4885b4e872a",
        "name": "Users Management",
        "item": [
          {
            "id": "b0bc622c-4171-48b3-92f5-60bbea4cf44a",
            "name": "Get Users Paginated",
            "request": {
              "url": {
                "path": [
                  ""
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "10"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "1e005ecf-1d6b-40f4-94c3-939c63f717f9",
            "name": "Get User by ID",
            "request": {
              "url": {
                "path": [
                  "{{user_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "75028e7f-70bb-469e-8279-174e0b7fcbe2",
            "name": "Update User",
            "request": {
              "url": {
                "path": [
                  "{{user_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Updated User\",\n  \"email\": \"updated@example.com\",\n  \"physical_address\": \"456 Updated Street\"\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "19ebfbb3-49cb-40fa-88a9-baaa42162b4a",
        "name": "Products",
        "item": [
          {
            "id": "c590f01c-c085-40fc-ae82-5130e69dbd73",
            "name": "Get Products",
            "request": {
              "url": {
                "path": [
                  "products"
                ],
                "host": [
                  "{{product_base_url}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "cd030ef7-42be-4b28-9576-cfde45f63595",
            "name": "Get Product by ID",
            "request": {
              "url": {
                "path": [
                  "products",
                  "1"
                ],
                "host": [
                  "{{product_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "62d85723-82e0-46af-a291-6d4f578fa1ce",
            "name": "Create Product",
            "request": {
              "url": {
                "path": [
                  "products"
                ],
                "host": [
                  "{{product_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Test Product\",\n  \"description\": \"Test Description\",\n  \"price\": 99.99,\n  \"stock\": 10,\n  \"brand_id\": 1,\n  \"processor_id\": 1,\n  \"operating_system_id\": 1\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "bfaadf52-815c-4a53-9298-9844f721ab35",
        "name": "Orders",
        "item": [
          {
            "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
            "name": "Get Orders",
            "request": {
              "url": {
                "path": [
                  "orders"
                ],
                "host": [
                  "{{orders_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
            "name": "Create Order",
            "request": {
              "url": {
                "path": [
                  "orders"
                ],
                "host": [
                  "{{orders_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "580c10e8-f165-4682-a29a-8d5bfe6c74bd",
        "name": "Reviews",
        "item": [
          {
            "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
            "name": "Get Reviews",
            "request": {
              "url": {
                "path": [
                  "reviews"
                ],
                "host": [
                  "{{reviews_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "c3081377-e26a-4105-a432-15e6fa480a29",
            "name": "Create Review",
            "request": {
              "url": {
                "path": [
                  "reviews"
                ],
                "host": [
                  "{{reviews_base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "{{auth_token}}"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "ff74cb8e-fc45-42c8-983c-20b15742d56f",
          "type": "text/javascript",
          "exec": [
            "// Generar datos aleatorios para pruebas",
            "pm.globals.set('random_email', 'test_' + Math.random().toString(36).substring(7) + '@example.com');",
            "pm.globals.set('random_name', 'Test User ' + Math.random().toString(36).substring(7));",
            "pm.globals.set('timestamp', new Date().toISOString());"
          ],
          "_lastExecutionId": "57f33c73-7192-4b85-b866-d308639c77ff"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "74e1038f-572d-4258-ad85-34607efe8eea",
          "type": "text/javascript",
          "exec": [
            "// Validaciones globales para todas las requests",
            "pm.test('No server errors (5xx)', function () {",
            "    pm.expect(pm.response.code).to.be.below(500);",
            "});",
            "",
            "pm.test('Response time is acceptable', function () {",
            "    pm.expect(pm.response.responseTime).to.be.below(5000);",
            "});",
            "",
            "if (pm.response.code !== 404) {",
            "    pm.test('Response is valid JSON', function () {",
            "        pm.response.to.be.json;",
            "    });",
            "}"
          ],
          "_lastExecutionId": "b34e925d-f995-4279-be7f-adf5ef25566a"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:3002",
        "key": "base_url"
      },
      {
        "type": "string",
        "value": "http://localhost:3001",
        "key": "product_base_url"
      },
      {
        "type": "string",
        "value": "http://localhost:3004",
        "key": "orders_base_url"
      },
      {
        "type": "string",
        "value": "http://localhost:3003",
        "key": "reviews_base_url"
      },
      {
        "type": "string",
        "value": "",
        "key": "auth_token"
      },
      {
        "type": "string",
        "value": "",
        "key": "user_id"
      }
    ],
    "info": {
      "_postman_id": "bytestore-api-tests",
      "name": "ByteStore API - Pruebas Exhaustivas",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Colecci√≥n completa de pruebas para todos los endpoints de la API ByteStore",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2024-01-01T00:00:00.000Z",
      "postman_exported_using": "Postman/10.0.0"
    },
    "id": "bytestore-api-environment",
    "name": "ByteStore API Environment",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:3002",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "http://localhost:3001",
        "key": "product_base_url"
      },
      {
        "type": "any",
        "value": "http://localhost:3004",
        "key": "orders_base_url"
      },
      {
        "type": "any",
        "value": "http://localhost:3003",
        "key": "reviews_base_url"
      },
      {
        "type": "any",
        "value": "http://localhost:3000",
        "key": "gateway_url"
      },
      {
        "type": "any",
        "value": "",
        "key": "auth_token"
      },
      {
        "type": "any",
        "value": "",
        "key": "user_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "admin_token"
      },
      {
        "type": "any",
        "value": "",
        "key": "test_product_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "test_order_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "test_review_id"
      }
    ]
  },
  "globals": {
    "id": "c64d3a2b-32af-401f-b6f9-46802612ec50",
    "values": [
      {
        "type": "any",
        "value": "test_gh1tdh@example.com",
        "key": "random_email"
      },
      {
        "type": "any",
        "value": "Test User gk5onm",
        "key": "random_name"
      },
      {
        "type": "any",
        "value": "2025-09-14T02:37:29.225Z",
        "key": "timestamp"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 29,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 13,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 41,
        "pending": 0,
        "failed": 17
      },
      "testScripts": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 13,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 4,
      "responseMin": 2,
      "responseMax": 13,
      "responseSd": 3.3333333333333335,
      "dnsAverage": 0.5691857142855952,
      "dnsMin": 0.08489999999983411,
      "dnsMax": 0.6498999999998887,
      "dnsSd": 0.19770881495323275,
      "firstByteAverage": 1.871822222222085,
      "firstByteMin": 1.251800000000003,
      "firstByteMax": 2.7413000000001375,
      "firstByteSd": 0.5937811133888472,
      "started": 1757817441320,
      "completed": 1757817449286
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 13,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22d9ec6a-b6b0-4c14-bda2-7d7606110336",
          "httpRequestId": "8397229b-4163-4a9f-a378-56e23ea2e2ea"
        },
        "item": {
          "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
          "name": "Register User",
          "request": {
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "});"
                ],
                "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3002",
            "path": [
              "sign-up"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ea53a5c9-6e55-459b-bd17-78d794cf81a7",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3002",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "141",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Test User 6sc9q1j\",\n  \"email\": \"test_ejmqx@example.com\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
          }
        },
        "response": {
          "id": "cdb1b493-b5b4-4d7e-94bb-82177863ab42",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "26"
            },
            {
              "key": "ETag",
              "value": "W/\"1a-7YjFjlZwk1NDK0YSrIa7p6vDUe4\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:21 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              100,
              97,
              116,
              97,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 26
        },
        "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false
          },
          {
            "assertion": "Status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has user data",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has user data",
              "message": "expected { message: 'Invalid data' } to have property 'data'",
              "stack": "AssertionError: expected { message: 'Invalid data' } to have property 'data'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6fef7bd8-6713-4a40-9f1b-c00fa7f68650",
          "length": 13,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "507010c9-9e68-407f-93dd-9bd07ec1cdcb"
        },
        "item": {
          "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
          "name": "Login User",
          "request": {
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has token and user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "    ",
                  "    // Guardar token y datos del usuario",
                  "    pm.environment.set('auth_token', jsonData.data.token);",
                  "    pm.environment.set('user_id', jsonData.data.id);",
                  "    pm.environment.set('user_role', jsonData.data.role);",
                  "});",
                  "",
                  "pm.test('Token is valid JWT format', function () {",
                  "    var jsonData = pm.response.json();",
                  "    var token = jsonData.data.token;",
                  "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                  "});"
                ],
                "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3002",
            "path": [
              "sign-in"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "87554b07-71f0-4012-8c79-3e678cb519e6",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3002",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "70",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"test_ikhyhm@example.com\",\n  \"password\": \"TestPass123!\"\n}"
          }
        },
        "response": {
          "id": "809649f2-2180-40bb-b2b4-f552a7960e7f",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "28"
            },
            {
              "key": "ETag",
              "value": "W/\"1c-ZEVVcvtFhxKX/QUvVKqKxwGbbNA\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:22 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              115,
              101,
              114,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 28
        },
        "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response has token and user data",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has token and user data",
              "message": "Target cannot be null or undefined.",
              "stack": "AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:2:2)"
            }
          },
          {
            "assertion": "Token is valid JWT format",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "Token is valid JWT format",
              "message": "Cannot read properties of undefined (reading 'token')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'token')\n   at Object.eval sandbox-script.js:3:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a7019b07-6a91-4305-9196-9546fa83728d",
          "length": 13,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a2d35da7-7ccc-41ab-910a-6efa3ccaf83d"
        },
        "item": {
          "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
          "name": "Login Invalid Credentials",
          "request": {
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cf30a1d-f8cc-45c9-9ebf-816231a47244",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 401 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
                  "});",
                  "",
                  "pm.test('Response has error message', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "9b8f4bef-8e95-4e77-bcdd-f8bf9611a9e3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3002",
            "path": [
              "sign-in"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "92eb6fc2-1a6d-464f-97c9-66baf834dda6",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3002",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "71",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
          }
        },
        "response": {
          "id": "b2699cb6-ca76-4c54-abab-fc4b70bda221",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "28"
            },
            {
              "key": "ETag",
              "value": "W/\"1c-ZEVVcvtFhxKX/QUvVKqKxwGbbNA\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:23 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              85,
              115,
              101,
              114,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 28
        },
        "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          },
          {
            "assertion": "Status code is 401 or 404",
            "skipped": false
          },
          {
            "assertion": "Response has error message",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "68ced852-fc8a-4fdc-8965-dbf83c3fcdf0",
          "length": 13,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d3c3156-d175-4084-8cf6-5c62ec4f2d75"
        },
        "item": {
          "id": "b0bc622c-4171-48b3-92f5-60bbea4cf44a",
          "name": "Get Users Paginated",
          "request": {
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3002",
            "path": [
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a291b6e5-e32e-4120-9119-ed4a743f1bff",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3002",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a1753104-b6ce-4928-b42d-7946607fe090",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-N67srZe+pg7jAf/RV9vAw/TkJEU\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:23 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              114,
              101,
              113,
              117,
              101,
              114,
              105,
              100,
              111,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 29
        },
        "id": "b0bc622c-4171-48b3-92f5-60bbea4cf44a",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8a345a71-6b95-4761-ac2d-218b8fe4cc25",
          "length": 13,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8f2cae8a-df21-4d64-9cca-7ca13495a861"
        },
        "item": {
          "id": "1e005ecf-1d6b-40f4-94c3-939c63f717f9",
          "name": "Get User by ID",
          "request": {
            "url": {
              "path": [
                "{{user_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3002",
            "path": [
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "24e3a40a-48bd-4938-ad07-6b4ce7d70f36",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3002",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "bff6d2ea-5745-4e08-a21c-91d139f321c6",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-N67srZe+pg7jAf/RV9vAw/TkJEU\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:24 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              111,
              107,
              101,
              110,
              32,
              114,
              101,
              113,
              117,
              101,
              114,
              105,
              100,
              111,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 29
        },
        "id": "1e005ecf-1d6b-40f4-94c3-939c63f717f9",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc5023b0-e903-463f-bf36-a5b3e4ec4e0d",
          "length": 13,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "de21f5cb-5482-45ac-b402-1d9aa97e2410"
        },
        "item": {
          "id": "75028e7f-70bb-469e-8279-174e0b7fcbe2",
          "name": "Update User",
          "request": {
            "url": {
              "path": [
                "{{user_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated User\",\n  \"email\": \"updated@example.com\",\n  \"physical_address\": \"456 Updated Street\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3002",
            "path": [
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b72cd2bd-889b-49ea-935a-4b8b4debb136",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3002",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "106",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Updated User\",\n  \"email\": \"updated@example.com\",\n  \"physical_address\": \"456 Updated Street\"\n}"
          }
        },
        "response": {
          "id": "950611a6-b6ff-46c0-b790-4e8ad849acdc",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'none'"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "139"
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:25 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              60,
              33,
              68,
              79,
              67,
              84,
              89,
              80,
              69,
              32,
              104,
              116,
              109,
              108,
              62,
              10,
              60,
              104,
              116,
              109,
              108,
              32,
              108,
              97,
              110,
              103,
              61,
              34,
              101,
              110,
              34,
              62,
              10,
              60,
              104,
              101,
              97,
              100,
              62,
              10,
              60,
              109,
              101,
              116,
              97,
              32,
              99,
              104,
              97,
              114,
              115,
              101,
              116,
              61,
              34,
              117,
              116,
              102,
              45,
              56,
              34,
              62,
              10,
              60,
              116,
              105,
              116,
              108,
              101,
              62,
              69,
              114,
              114,
              111,
              114,
              60,
              47,
              116,
              105,
              116,
              108,
              101,
              62,
              10,
              60,
              47,
              104,
              101,
              97,
              100,
              62,
              10,
              60,
              98,
              111,
              100,
              121,
              62,
              10,
              60,
              112,
              114,
              101,
              62,
              67,
              97,
              110,
              110,
              111,
              116,
              32,
              80,
              85,
              84,
              32,
              47,
              60,
              47,
              112,
              114,
              101,
              62,
              10,
              60,
              47,
              98,
              111,
              100,
              121,
              62,
              10,
              60,
              47,
              104,
              116,
              109,
              108,
              62,
              10
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 139
        },
        "id": "75028e7f-70bb-469e-8279-174e0b7fcbe2",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4d5aeac3-9498-4c91-9eeb-13dbcda1c46f",
          "length": 13,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0a48ae13-8a25-4b0f-b5ff-9d1bbf702b53"
        },
        "item": {
          "id": "c590f01c-c085-40fc-ae82-5130e69dbd73",
          "name": "Get Products",
          "request": {
            "url": {
              "path": [
                "products"
              ],
              "host": [
                "{{product_base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3001",
            "path": [
              "products"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "77856b5e-dcb1-443f-9d69-0400129f9abf",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "ed089af5-5c17-4eb7-a3ad-f1b4fefc59ed",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "99"
            },
            {
              "key": "ETag",
              "value": "W/\"63-fbYqGzam3W3FhpKYGVugOXQk+/M\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:25 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              86,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              32,
              40,
              110,
              117,
              109,
              101,
              114,
              105,
              99,
              32,
              115,
              116,
              114,
              105,
              110,
              103,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              41,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              66,
              97,
              100,
              32,
              82,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 99
        },
        "id": "c590f01c-c085-40fc-ae82-5130e69dbd73",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0c1ce637-1c77-4b69-9403-7d02d6861bfb",
          "length": 13,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e3e50feb-666f-47c3-a465-a40e2b4d7d52"
        },
        "item": {
          "id": "cd030ef7-42be-4b28-9576-cfde45f63595",
          "name": "Get Product by ID",
          "request": {
            "url": {
              "path": [
                "products",
                "1"
              ],
              "host": [
                "{{product_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3001",
            "path": [
              "products",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e92cc7e9-e5e7-4184-85b9-15c5c7bca681",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6f7fe70a-6b77-4a80-a0c8-04bce3e71210",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "73"
            },
            {
              "key": "ETag",
              "value": "W/\"49-URZE+tGR6MrxEFMsT1/VUlFwMlk\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:26 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              97,
              110,
              110,
              111,
              116,
              32,
              71,
              69,
              84,
              32,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              47,
              49,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              52,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2,
          "responseSize": 73
        },
        "id": "cd030ef7-42be-4b28-9576-cfde45f63595",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bdeecd41-cb60-4d97-ad28-e2f4a8fc027d",
          "length": 13,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "863ed50f-9285-4071-b0b0-bb28ba68a20e"
        },
        "item": {
          "id": "62d85723-82e0-46af-a291-6d4f578fa1ce",
          "name": "Create Product",
          "request": {
            "url": {
              "path": [
                "products"
              ],
              "host": [
                "{{product_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Product\",\n  \"description\": \"Test Description\",\n  \"price\": 99.99,\n  \"stock\": 10,\n  \"brand_id\": 1,\n  \"processor_id\": 1,\n  \"operating_system_id\": 1\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3001",
            "path": [
              "products"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a8e50fd3-a73d-463d-9be4-f89d55f74b41",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3001",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "164",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Test Product\",\n  \"description\": \"Test Description\",\n  \"price\": 99.99,\n  \"stock\": 10,\n  \"brand_id\": 1,\n  \"processor_id\": 1,\n  \"operating_system_id\": 1\n}"
          }
        },
        "response": {
          "id": "bcb02243-5c81-40bd-8d8c-ca12e191391a",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "72"
            },
            {
              "key": "ETag",
              "value": "W/\"48-bS/nuYb7Keam9H7Icd5sdvviFFs\""
            },
            {
              "key": "Date",
              "value": "Sun, 14 Sep 2025 02:37:26 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              97,
              110,
              110,
              111,
              116,
              32,
              80,
              79,
              83,
              84,
              32,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              52,
              125
            ]
          },
          "cookie": [],
          "responseTime": 3,
          "responseSize": 72
        },
        "id": "62d85723-82e0-46af-a291-6d4f578fa1ce",
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f80f3928-699d-4cf7-bc9d-111f1914d54c",
          "length": 13,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e2da6fc-5e6a-4630-bdf9-e60f3d68242f"
        },
        "item": {
          "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
          "name": "Get Orders",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3004",
            "path": [
              "orders"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "30c4829c-93c7-4418-ac89-34848e8e71c4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3004",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
        "requestError": {
          "code": "ECONNRESET"
        },
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "No server errors (5xx)",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:10)"
            }
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response is valid JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "2f8dbf3a-3318-4f32-bb18-1626f80c760d",
          "length": 13,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "123d6e3e-8aaa-44ef-ad2c-e3b38d4aa739"
        },
        "item": {
          "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
          "name": "Create Order",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3004",
            "path": [
              "orders"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a60fa36c-1680-4080-8873-fad01de7b146",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3004",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
          }
        },
        "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
        "requestError": {
          "code": "ECONNRESET"
        },
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "No server errors (5xx)",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:11)"
            }
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response is valid JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "4704a423-4145-488d-b9a4-53392cc40296",
          "length": 13,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dee6b90f-aadb-48b5-91c5-ffbaa2d3b861"
        },
        "item": {
          "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
          "name": "Get Reviews",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3003",
            "path": [
              "reviews"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "98aa725c-9b66-4b0e-8adb-e83601e91d79",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3003",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
        "requestError": {
          "code": "ECONNRESET"
        },
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "No server errors (5xx)",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:12)"
            }
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response is valid JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b5a1cbca-aeaf-4b37-838e-9d6a3b787a65",
          "length": 13,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6c817c60-ce1a-4212-b618-27d664fab62f"
        },
        "item": {
          "id": "c3081377-e26a-4105-a432-15e6fa480a29",
          "name": "Create Review",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3003",
            "path": [
              "reviews"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "df3916d6-ce99-49c5-971c-af27e744f22c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3003",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
          }
        },
        "id": "c3081377-e26a-4105-a432-15e6fa480a29",
        "requestError": {
          "code": "ECONNRESET"
        },
        "assertions": [
          {
            "assertion": "No server errors (5xx)",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "No server errors (5xx)",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)"
            }
          },
          {
            "assertion": "Response time is acceptable",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:13)"
            }
          },
          {
            "assertion": "Response is valid JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response is valid JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:13)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 523
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 201",
          "message": "expected response to have status code 201 but got 400",
          "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "07f314d63800094e22e662fde7069e53",
          "id": "eacc83c0-2672-4d25-afe7-cd0921ba1b50",
          "timestamp": 1757817441942,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
          "name": "Register User",
          "request": {
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "});"
                ],
                "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
              }
            }
          ]
        },
        "parent": {
          "id": "b6b2ff18-390b-456a-be4a-09f651bb797a",
          "name": "üîê Authentication",
          "item": [
            {
              "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
              "name": "Register User",
              "request": {
                "url": {
                  "path": [
                    "sign-up"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response has user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('email');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "});"
                    ],
                    "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
                  }
                }
              ]
            },
            {
              "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
              "name": "Login User",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has token and user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data).to.have.property('token');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "    ",
                      "    // Guardar token y datos del usuario",
                      "    pm.environment.set('auth_token', jsonData.data.token);",
                      "    pm.environment.set('user_id', jsonData.data.id);",
                      "    pm.environment.set('user_role', jsonData.data.role);",
                      "});",
                      "",
                      "pm.test('Token is valid JWT format', function () {",
                      "    var jsonData = pm.response.json();",
                      "    var token = jsonData.data.token;",
                      "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                      "});"
                    ],
                    "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
                  }
                }
              ]
            },
            {
              "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
              "name": "Login Invalid Credentials",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cf30a1d-f8cc-45c9-9ebf-816231a47244",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 401 or 404', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
                      "});",
                      "",
                      "pm.test('Response has error message', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9b8f4bef-8e95-4e77-bcdd-f8bf9611a9e3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 13,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22d9ec6a-b6b0-4c14-bda2-7d7606110336",
          "httpRequestId": "8397229b-4163-4a9f-a378-56e23ea2e2ea",
          "scriptId": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
          "execution": "10586927-371c-4938-8f87-5b3a894eed99"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response has user data",
          "message": "expected { message: 'Invalid data' } to have property 'data'",
          "stack": "AssertionError: expected { message: 'Invalid data' } to have property 'data'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "0e9de19b1b987ef39a0f88050b07aefa",
          "id": "e406efa1-b266-4ecb-8790-41b15b11dd57",
          "timestamp": 1757817441944,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
          "name": "Register User",
          "request": {
            "url": {
              "path": [
                "sign-up"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "});"
                ],
                "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
              }
            }
          ]
        },
        "parent": {
          "id": "b6b2ff18-390b-456a-be4a-09f651bb797a",
          "name": "üîê Authentication",
          "item": [
            {
              "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
              "name": "Register User",
              "request": {
                "url": {
                  "path": [
                    "sign-up"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response has user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('email');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "});"
                    ],
                    "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
                  }
                }
              ]
            },
            {
              "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
              "name": "Login User",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has token and user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data).to.have.property('token');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "    ",
                      "    // Guardar token y datos del usuario",
                      "    pm.environment.set('auth_token', jsonData.data.token);",
                      "    pm.environment.set('user_id', jsonData.data.id);",
                      "    pm.environment.set('user_role', jsonData.data.role);",
                      "});",
                      "",
                      "pm.test('Token is valid JWT format', function () {",
                      "    var jsonData = pm.response.json();",
                      "    var token = jsonData.data.token;",
                      "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                      "});"
                    ],
                    "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
                  }
                }
              ]
            },
            {
              "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
              "name": "Login Invalid Credentials",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cf30a1d-f8cc-45c9-9ebf-816231a47244",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 401 or 404', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
                      "});",
                      "",
                      "pm.test('Response has error message', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9b8f4bef-8e95-4e77-bcdd-f8bf9611a9e3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 13,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "22d9ec6a-b6b0-4c14-bda2-7d7606110336",
          "httpRequestId": "8397229b-4163-4a9f-a378-56e23ea2e2ea",
          "scriptId": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
          "execution": "10586927-371c-4938-8f87-5b3a894eed99"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "e3bd6eda1cb0422bfce43f4050ef2d89",
          "id": "0fa12160-c3cf-41a9-9dcd-25893d3822e9",
          "timestamp": 1757817442559,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
          "name": "Login User",
          "request": {
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has token and user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "    ",
                  "    // Guardar token y datos del usuario",
                  "    pm.environment.set('auth_token', jsonData.data.token);",
                  "    pm.environment.set('user_id', jsonData.data.id);",
                  "    pm.environment.set('user_role', jsonData.data.role);",
                  "});",
                  "",
                  "pm.test('Token is valid JWT format', function () {",
                  "    var jsonData = pm.response.json();",
                  "    var token = jsonData.data.token;",
                  "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                  "});"
                ],
                "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
              }
            }
          ]
        },
        "parent": {
          "id": "b6b2ff18-390b-456a-be4a-09f651bb797a",
          "name": "üîê Authentication",
          "item": [
            {
              "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
              "name": "Register User",
              "request": {
                "url": {
                  "path": [
                    "sign-up"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response has user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('email');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "});"
                    ],
                    "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
                  }
                }
              ]
            },
            {
              "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
              "name": "Login User",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has token and user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data).to.have.property('token');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "    ",
                      "    // Guardar token y datos del usuario",
                      "    pm.environment.set('auth_token', jsonData.data.token);",
                      "    pm.environment.set('user_id', jsonData.data.id);",
                      "    pm.environment.set('user_role', jsonData.data.role);",
                      "});",
                      "",
                      "pm.test('Token is valid JWT format', function () {",
                      "    var jsonData = pm.response.json();",
                      "    var token = jsonData.data.token;",
                      "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                      "});"
                    ],
                    "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
                  }
                }
              ]
            },
            {
              "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
              "name": "Login Invalid Credentials",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cf30a1d-f8cc-45c9-9ebf-816231a47244",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 401 or 404', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
                      "});",
                      "",
                      "pm.test('Response has error message', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9b8f4bef-8e95-4e77-bcdd-f8bf9611a9e3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6fef7bd8-6713-4a40-9f1b-c00fa7f68650",
          "length": 13,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "507010c9-9e68-407f-93dd-9bd07ec1cdcb",
          "scriptId": "05b864dc-8713-4367-8403-55ee139f83e3",
          "execution": "5cd61f64-0407-4302-8ed1-49949eb3b472"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response has token and user data",
          "message": "Target cannot be null or undefined.",
          "stack": "AssertionError: Target cannot be null or undefined.\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "6e2ffa9f47b4b36a3051fb38dc0fe168",
          "id": "c92fd652-43c9-4ed0-987e-895fccf6d7bf",
          "timestamp": 1757817442559,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
          "name": "Login User",
          "request": {
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has token and user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "    ",
                  "    // Guardar token y datos del usuario",
                  "    pm.environment.set('auth_token', jsonData.data.token);",
                  "    pm.environment.set('user_id', jsonData.data.id);",
                  "    pm.environment.set('user_role', jsonData.data.role);",
                  "});",
                  "",
                  "pm.test('Token is valid JWT format', function () {",
                  "    var jsonData = pm.response.json();",
                  "    var token = jsonData.data.token;",
                  "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                  "});"
                ],
                "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
              }
            }
          ]
        },
        "parent": {
          "id": "b6b2ff18-390b-456a-be4a-09f651bb797a",
          "name": "üîê Authentication",
          "item": [
            {
              "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
              "name": "Register User",
              "request": {
                "url": {
                  "path": [
                    "sign-up"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response has user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('email');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "});"
                    ],
                    "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
                  }
                }
              ]
            },
            {
              "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
              "name": "Login User",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has token and user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data).to.have.property('token');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "    ",
                      "    // Guardar token y datos del usuario",
                      "    pm.environment.set('auth_token', jsonData.data.token);",
                      "    pm.environment.set('user_id', jsonData.data.id);",
                      "    pm.environment.set('user_role', jsonData.data.role);",
                      "});",
                      "",
                      "pm.test('Token is valid JWT format', function () {",
                      "    var jsonData = pm.response.json();",
                      "    var token = jsonData.data.token;",
                      "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                      "});"
                    ],
                    "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
                  }
                }
              ]
            },
            {
              "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
              "name": "Login Invalid Credentials",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cf30a1d-f8cc-45c9-9ebf-816231a47244",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 401 or 404', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
                      "});",
                      "",
                      "pm.test('Response has error message', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9b8f4bef-8e95-4e77-bcdd-f8bf9611a9e3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6fef7bd8-6713-4a40-9f1b-c00fa7f68650",
          "length": 13,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "507010c9-9e68-407f-93dd-9bd07ec1cdcb",
          "scriptId": "05b864dc-8713-4367-8403-55ee139f83e3",
          "execution": "5cd61f64-0407-4302-8ed1-49949eb3b472"
        }
      },
      {
        "error": {
          "name": "TypeError",
          "index": 2,
          "test": "Token is valid JWT format",
          "message": "Cannot read properties of undefined (reading 'token')",
          "stack": "TypeError: Cannot read properties of undefined (reading 'token')\n   at Object.eval sandbox-script.js:3:2)",
          "checksum": "fc001011a0e68f2e8dc6227c5ed8b0af",
          "id": "13cc49a5-e082-4f40-9b33-a162ea1acd38",
          "timestamp": 1757817442560,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
          "name": "Login User",
          "request": {
            "url": {
              "path": [
                "sign-in"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has token and user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "    ",
                  "    // Guardar token y datos del usuario",
                  "    pm.environment.set('auth_token', jsonData.data.token);",
                  "    pm.environment.set('user_id', jsonData.data.id);",
                  "    pm.environment.set('user_role', jsonData.data.role);",
                  "});",
                  "",
                  "pm.test('Token is valid JWT format', function () {",
                  "    var jsonData = pm.response.json();",
                  "    var token = jsonData.data.token;",
                  "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                  "});"
                ],
                "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
              }
            }
          ]
        },
        "parent": {
          "id": "b6b2ff18-390b-456a-be4a-09f651bb797a",
          "name": "üîê Authentication",
          "item": [
            {
              "id": "727988e4-cf9f-4727-8414-b018f77cd4b7",
              "name": "Register User",
              "request": {
                "url": {
                  "path": [
                    "sign-up"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3f17db7f-1ba8-41e8-93ec-1a931ed03217",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response has user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('email');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "});"
                    ],
                    "_lastExecutionId": "10586927-371c-4938-8f87-5b3a894eed99"
                  }
                }
              ]
            },
            {
              "id": "9add6af2-cfc7-4b27-bfbf-338a430dbf83",
              "name": "Login User",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "05b864dc-8713-4367-8403-55ee139f83e3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has token and user data', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data).to.have.property('token');",
                      "    pm.expect(jsonData.data).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('role');",
                      "    ",
                      "    // Guardar token y datos del usuario",
                      "    pm.environment.set('auth_token', jsonData.data.token);",
                      "    pm.environment.set('user_id', jsonData.data.id);",
                      "    pm.environment.set('user_role', jsonData.data.role);",
                      "});",
                      "",
                      "pm.test('Token is valid JWT format', function () {",
                      "    var jsonData = pm.response.json();",
                      "    var token = jsonData.data.token;",
                      "    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
                      "});"
                    ],
                    "_lastExecutionId": "5cd61f64-0407-4302-8ed1-49949eb3b472"
                  }
                }
              ]
            },
            {
              "id": "398199be-dca5-4bd2-91c3-0c9d24c78d44",
              "name": "Login Invalid Credentials",
              "request": {
                "url": {
                  "path": [
                    "sign-in"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cf30a1d-f8cc-45c9-9ebf-816231a47244",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 401 or 404', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
                      "});",
                      "",
                      "pm.test('Response has error message', function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9b8f4bef-8e95-4e77-bcdd-f8bf9611a9e3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6fef7bd8-6713-4a40-9f1b-c00fa7f68650",
          "length": 13,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "507010c9-9e68-407f-93dd-9bd07ec1cdcb",
          "scriptId": "05b864dc-8713-4367-8403-55ee139f83e3",
          "execution": "5cd61f64-0407-4302-8ed1-49949eb3b472"
        }
      },
      {
        "error": {
          "code": "ECONNRESET",
          "name": "Error",
          "message": "socket hang up",
          "stack": "Error: socket hang up\n    at Socket.socketOnEnd (node:_http_client:542:25)\n    at Socket.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "de04b12f90a2f25c5c631a4d8b3c29f4",
          "id": "04520669-59db-4965-a56e-4c6039bf3798",
          "timestamp": 1757817447474,
          "stacktrace": [
            {
              "fileName": "node:_http_client",
              "lineNumber": 542,
              "functionName": "Socket.socketOnEnd",
              "typeName": "Socket",
              "methodName": "socketOnEnd",
              "columnNumber": 25,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 530,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 35,
              "native": false
            },
            {
              "fileName": "node:internal/streams/readable",
              "lineNumber": 1698,
              "functionName": "endReadableNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 12,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
          "name": "Get Orders",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3004",
              "path": [
                "orders"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": ""
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "30c4829c-93c7-4418-ac89-34848e8e71c4",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:3004",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "ref": "f80f3928-699d-4cf7-bc9d-111f1914d54c",
          "length": 13,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e2da6fc-5e6a-4630-bdf9-e60f3d68242f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "No server errors (5xx)",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "bd5645c9e4a5361d0f711d7148a50307",
          "id": "06c53f26-cbe5-4637-8819-8439f2388667",
          "timestamp": 1757817447487,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
          "name": "Get Orders",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "bfaadf52-815c-4a53-9298-9844f721ab35",
          "name": "Orders",
          "item": [
            {
              "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
              "name": "Get Orders",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
              "name": "Create Order",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f80f3928-699d-4cf7-bc9d-111f1914d54c",
          "length": 13,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e2da6fc-5e6a-4630-bdf9-e60f3d68242f",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "1a909869-aca5-4b31-9acc-8521e9435258"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "19560214f074853ec3816a617781828c",
          "id": "bf68cd75-144e-46fa-b689-5242b26e0bd2",
          "timestamp": 1757817447488,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
          "name": "Get Orders",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "bfaadf52-815c-4a53-9298-9844f721ab35",
          "name": "Orders",
          "item": [
            {
              "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
              "name": "Get Orders",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
              "name": "Create Order",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f80f3928-699d-4cf7-bc9d-111f1914d54c",
          "length": 13,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e2da6fc-5e6a-4630-bdf9-e60f3d68242f",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "1a909869-aca5-4b31-9acc-8521e9435258"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response is valid JSON",
          "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
          "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:10)",
          "checksum": "64298fbaf2a2be327e754aa06c446a4c",
          "id": "e5670556-ebfa-4923-be5e-002fc0257acd",
          "timestamp": 1757817447489,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
          "name": "Get Orders",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "bfaadf52-815c-4a53-9298-9844f721ab35",
          "name": "Orders",
          "item": [
            {
              "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
              "name": "Get Orders",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
              "name": "Create Order",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f80f3928-699d-4cf7-bc9d-111f1914d54c",
          "length": 13,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e2da6fc-5e6a-4630-bdf9-e60f3d68242f",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "1a909869-aca5-4b31-9acc-8521e9435258"
        }
      },
      {
        "error": {
          "code": "ECONNRESET",
          "name": "Error",
          "message": "socket hang up",
          "stack": "Error: socket hang up\n    at Socket.socketOnEnd (node:_http_client:542:25)\n    at Socket.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "de04b12f90a2f25c5c631a4d8b3c29f4",
          "id": "6f1471f3-0c43-4509-813d-f1ce80c984db",
          "timestamp": 1757817448094,
          "stacktrace": [
            {
              "fileName": "node:_http_client",
              "lineNumber": 542,
              "functionName": "Socket.socketOnEnd",
              "typeName": "Socket",
              "methodName": "socketOnEnd",
              "columnNumber": 25,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 530,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 35,
              "native": false
            },
            {
              "fileName": "node:internal/streams/readable",
              "lineNumber": 1698,
              "functionName": "endReadableNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 12,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
          "name": "Create Order",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3004",
              "path": [
                "orders"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "a60fa36c-1680-4080-8873-fad01de7b146",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:3004",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "ref": "2f8dbf3a-3318-4f32-bb18-1626f80c760d",
          "length": 13,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "123d6e3e-8aaa-44ef-ad2c-e3b38d4aa739"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "No server errors (5xx)",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "ead28ff6d239f2e47cdcbffddf489428",
          "id": "d23ec840-d6f9-40df-95f4-14e6997cb160",
          "timestamp": 1757817448107,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
          "name": "Create Order",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "bfaadf52-815c-4a53-9298-9844f721ab35",
          "name": "Orders",
          "item": [
            {
              "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
              "name": "Get Orders",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
              "name": "Create Order",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2f8dbf3a-3318-4f32-bb18-1626f80c760d",
          "length": 13,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "123d6e3e-8aaa-44ef-ad2c-e3b38d4aa739",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "1bdc6e30-664a-42a7-a92f-ff7abc266d22"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "c9b24f0d4862a4732db02846a99c3b1e",
          "id": "911e18d1-1297-41c4-8c77-ec87b41c155f",
          "timestamp": 1757817448108,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
          "name": "Create Order",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "bfaadf52-815c-4a53-9298-9844f721ab35",
          "name": "Orders",
          "item": [
            {
              "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
              "name": "Get Orders",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
              "name": "Create Order",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2f8dbf3a-3318-4f32-bb18-1626f80c760d",
          "length": 13,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "123d6e3e-8aaa-44ef-ad2c-e3b38d4aa739",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "1bdc6e30-664a-42a7-a92f-ff7abc266d22"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response is valid JSON",
          "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
          "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:11)",
          "checksum": "425cbe107159bc8969523ebcace87f9d",
          "id": "385bbfec-01db-4c18-b52a-f6b1855040d4",
          "timestamp": 1757817448109,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
          "name": "Create Order",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{orders_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "bfaadf52-815c-4a53-9298-9844f721ab35",
          "name": "Orders",
          "item": [
            {
              "id": "4b5ec599-5b7e-47cd-a380-99a111f72d10",
              "name": "Get Orders",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "07a937cc-19f8-4578-8911-8415d6459bb2",
              "name": "Create Order",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{orders_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2f8dbf3a-3318-4f32-bb18-1626f80c760d",
          "length": 13,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "123d6e3e-8aaa-44ef-ad2c-e3b38d4aa739",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "1bdc6e30-664a-42a7-a92f-ff7abc266d22"
        }
      },
      {
        "error": {
          "code": "ECONNRESET",
          "name": "Error",
          "message": "socket hang up",
          "stack": "Error: socket hang up\n    at Socket.socketOnEnd (node:_http_client:542:25)\n    at Socket.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "de04b12f90a2f25c5c631a4d8b3c29f4",
          "id": "315d55ea-cd60-4cbe-ad1a-b54defdd04d8",
          "timestamp": 1757817448668,
          "stacktrace": [
            {
              "fileName": "node:_http_client",
              "lineNumber": 542,
              "functionName": "Socket.socketOnEnd",
              "typeName": "Socket",
              "methodName": "socketOnEnd",
              "columnNumber": 25,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 530,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 35,
              "native": false
            },
            {
              "fileName": "node:internal/streams/readable",
              "lineNumber": 1698,
              "functionName": "endReadableNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 12,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
          "name": "Get Reviews",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3003",
              "path": [
                "reviews"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": ""
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "98aa725c-9b66-4b0e-8adb-e83601e91d79",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:3003",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "ref": "4704a423-4145-488d-b9a4-53392cc40296",
          "length": 13,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dee6b90f-aadb-48b5-91c5-ffbaa2d3b861"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "No server errors (5xx)",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "89ddd30eb83175cd49e14c71b4768f03",
          "id": "67733f79-d107-4e10-8ad5-74efc98a9f2d",
          "timestamp": 1757817448671,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
          "name": "Get Reviews",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "580c10e8-f165-4682-a29a-8d5bfe6c74bd",
          "name": "Reviews",
          "item": [
            {
              "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
              "name": "Get Reviews",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3081377-e26a-4105-a432-15e6fa480a29",
              "name": "Create Review",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4704a423-4145-488d-b9a4-53392cc40296",
          "length": 13,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dee6b90f-aadb-48b5-91c5-ffbaa2d3b861",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "3bdf3f02-fcdf-4d37-ba9d-7f05e55e9388"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:12)",
          "checksum": "5f28051c187bce6c0d3ad514e2d52241",
          "id": "f3b92a9f-56ed-46eb-8068-65eeb76ad899",
          "timestamp": 1757817448671,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
          "name": "Get Reviews",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "580c10e8-f165-4682-a29a-8d5bfe6c74bd",
          "name": "Reviews",
          "item": [
            {
              "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
              "name": "Get Reviews",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3081377-e26a-4105-a432-15e6fa480a29",
              "name": "Create Review",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4704a423-4145-488d-b9a4-53392cc40296",
          "length": 13,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dee6b90f-aadb-48b5-91c5-ffbaa2d3b861",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "3bdf3f02-fcdf-4d37-ba9d-7f05e55e9388"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response is valid JSON",
          "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
          "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:12)",
          "checksum": "da93ee3132fe7e3b4bffbbf19a525101",
          "id": "c9731c49-c7ad-4de3-9d88-4ee535988567",
          "timestamp": 1757817448672,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
          "name": "Get Reviews",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "580c10e8-f165-4682-a29a-8d5bfe6c74bd",
          "name": "Reviews",
          "item": [
            {
              "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
              "name": "Get Reviews",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3081377-e26a-4105-a432-15e6fa480a29",
              "name": "Create Review",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4704a423-4145-488d-b9a4-53392cc40296",
          "length": 13,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dee6b90f-aadb-48b5-91c5-ffbaa2d3b861",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "3bdf3f02-fcdf-4d37-ba9d-7f05e55e9388"
        }
      },
      {
        "error": {
          "code": "ECONNRESET",
          "name": "Error",
          "message": "socket hang up",
          "stack": "Error: socket hang up\n    at Socket.socketOnEnd (node:_http_client:542:25)\n    at Socket.emit (node:events:530:35)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "de04b12f90a2f25c5c631a4d8b3c29f4",
          "id": "ad444494-ac5a-473d-b524-e3ed06fc8717",
          "timestamp": 1757817449257,
          "stacktrace": [
            {
              "fileName": "node:_http_client",
              "lineNumber": 542,
              "functionName": "Socket.socketOnEnd",
              "typeName": "Socket",
              "methodName": "socketOnEnd",
              "columnNumber": 25,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 530,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 35,
              "native": false
            },
            {
              "fileName": "node:internal/streams/readable",
              "lineNumber": 1698,
              "functionName": "endReadableNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 12,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c3081377-e26a-4105-a432-15e6fa480a29",
          "name": "Create Review",
          "request": {
            "url": {
              "protocol": "http",
              "port": "3003",
              "path": [
                "reviews"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "df3916d6-ce99-49c5-971c-af27e744f22c",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:3003",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "ref": "b5a1cbca-aeaf-4b37-838e-9d6a3b787a65",
          "length": 13,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6c817c60-ce1a-4212-b618-27d664fab62f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "No server errors (5xx)",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "5a6a4786fe8ac0cec7af9387188b30f5",
          "id": "7e0d2ea2-9f9f-4d32-86e3-3e78a7d23961",
          "timestamp": 1757817449259,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c3081377-e26a-4105-a432-15e6fa480a29",
          "name": "Create Review",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "580c10e8-f165-4682-a29a-8d5bfe6c74bd",
          "name": "Reviews",
          "item": [
            {
              "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
              "name": "Get Reviews",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3081377-e26a-4105-a432-15e6fa480a29",
              "name": "Create Review",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b5a1cbca-aeaf-4b37-838e-9d6a3b787a65",
          "length": 13,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6c817c60-ce1a-4212-b618-27d664fab62f",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "b34e925d-f995-4279-be7f-adf5ef25566a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:13)",
          "checksum": "bab144ae28472eb014d5121190b962c2",
          "id": "f37b8c7c-d95a-4b5b-b170-f3e21f05dd8f",
          "timestamp": 1757817449260,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "c3081377-e26a-4105-a432-15e6fa480a29",
          "name": "Create Review",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "580c10e8-f165-4682-a29a-8d5bfe6c74bd",
          "name": "Reviews",
          "item": [
            {
              "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
              "name": "Get Reviews",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3081377-e26a-4105-a432-15e6fa480a29",
              "name": "Create Review",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b5a1cbca-aeaf-4b37-838e-9d6a3b787a65",
          "length": 13,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6c817c60-ce1a-4212-b618-27d664fab62f",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "b34e925d-f995-4279-be7f-adf5ef25566a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response is valid JSON",
          "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
          "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:13)",
          "checksum": "68dc44fde4316d2ba553a06bcfed5a55",
          "id": "88c86b14-6045-4664-b72b-86e1f9cd308d",
          "timestamp": 1757817449260,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "c3081377-e26a-4105-a432-15e6fa480a29",
          "name": "Create Review",
          "request": {
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{reviews_base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "580c10e8-f165-4682-a29a-8d5bfe6c74bd",
          "name": "Reviews",
          "item": [
            {
              "id": "901bb1ec-4adc-419f-abc3-c13d669ae737",
              "name": "Get Reviews",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c3081377-e26a-4105-a432-15e6fa480a29",
              "name": "Create Review",
              "request": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{reviews_base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{auth_token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b5a1cbca-aeaf-4b37-838e-9d6a3b787a65",
          "length": 13,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6c817c60-ce1a-4212-b618-27d664fab62f",
          "scriptId": "74e1038f-572d-4258-ad85-34607efe8eea",
          "execution": "b34e925d-f995-4279-be7f-adf5ef25566a"
        }
      }
    ],
    "error": null
  }
}