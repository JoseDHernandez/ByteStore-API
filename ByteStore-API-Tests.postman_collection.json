{
	"info": {
		"_postman_id": "bytestore-api-tests",
		"name": "ByteStore API - Pruebas Exhaustivas",
		"description": "Colecci√≥n completa de pruebas para todos los endpoints de la API ByteStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Generar datos aleatorios para pruebas",
					"pm.globals.set('random_email', 'test_' + Math.random().toString(36).substring(7) + '@example.com');",
					"pm.globals.set('random_name', 'Test User ' + Math.random().toString(36).substring(7));",
					"pm.globals.set('timestamp', new Date().toISOString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Validaciones globales para todas las requests",
					"pm.test('No server errors (5xx)', function () {",
					"    pm.expect(pm.response.code).to.be.below(500);",
					"});",
					"",
					"pm.test('Response time is acceptable', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"if (pm.response.code !== 404) {",
					"    pm.test('Response is valid JSON', function () {",
					"        pm.response.to.be.json;",
					"    });",
					"}"
				]
			}
		}
	],
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has user data', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('email');",
									"    pm.expect(jsonData.data).to.have.property('role');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{random_name}}\",\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\",\n  \"physical_address\": \"123 Test Street\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/sign-up",
							"host": ["{{base_url}}"],
							"path": ["sign-up"]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has token and user data', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data).to.have.property('role');",
									"    ",
									"    // Guardar token y datos del usuario",
									"    pm.environment.set('auth_token', jsonData.data.token);",
									"    pm.environment.set('user_id', jsonData.data.id);",
									"    pm.environment.set('user_role', jsonData.data.role);",
									"});",
									"",
									"pm.test('Token is valid JWT format', function () {",
									"    var jsonData = pm.response.json();",
									"    var token = jsonData.data.token;",
									"    pm.expect(token).to.match(/^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$/);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{random_email}}\",\n  \"password\": \"TestPass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/sign-in",
							"host": ["{{base_url}}"],
							"path": ["sign-in"]
						}
					},
					"response": []
				},
				{
					"name": "Login Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 or 404', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([401, 404]);",
									"});",
									"",
									"pm.test('Response has error message', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"WrongPassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/sign-in",
							"host": ["{{base_url}}"],
							"path": ["sign-in"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users Management",
			"item": [
				{
					"name": "Get Users Paginated",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/?page=1&limit=10",
							"host": ["{{base_url}}"],
							"path": [""],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["{{user_id}}"]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated User\",\n  \"email\": \"updated@example.com\",\n  \"physical_address\": \"456 Updated Street\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/{{user_id}}",
							"host": ["{{base_url}}"],
							"path": ["{{user_id}}"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{product_base_url}}/products?page=1&limit=10",
							"host": ["{{product_base_url}}"],
							"path": ["products"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{product_base_url}}/products/1",
							"host": ["{{product_base_url}}"],
							"path": ["products", "1"]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test Product\",\n  \"description\": \"Test Description\",\n  \"price\": 99.99,\n  \"stock\": 10,\n  \"brand_id\": 1,\n  \"processor_id\": 1,\n  \"operating_system_id\": 1\n}"
						},
						"url": {
							"raw": "{{product_base_url}}/products",
							"host": ["{{product_base_url}}"],
							"path": ["products"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": {
							"raw": "{{orders_base_url}}/orders",
							"host": ["{{orders_base_url}}"],
							"path": ["orders"]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"delivery_address\": \"123 Test Street\",\n  \"products\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2,\n      \"unit_price\": 99.99\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{orders_base_url}}/orders",
							"host": ["{{orders_base_url}}"],
							"path": ["orders"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get Reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": {
							"raw": "{{reviews_base_url}}/reviews",
							"host": ["{{reviews_base_url}}"],
							"path": ["reviews"]
						}
					},
					"response": []
				},
				{
					"name": "Create Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_id\": 1,\n  \"rating\": 5,\n  \"comment\": \"Excellent product!\"\n}"
						},
						"url": {
							"raw": "{{reviews_base_url}}/reviews",
							"host": ["{{reviews_base_url}}"],
							"path": ["reviews"]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3002",
			"type": "string"
		},
		{
			"key": "product_base_url",
			"value": "http://localhost:3001",
			"type": "string"
		},
		{
			"key": "orders_base_url",
			"value": "http://localhost:3004",
			"type": "string"
		},
		{
			"key": "reviews_base_url",
			"value": "http://localhost:3003",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		}
	]
}