services:
  # ==========================
  # API Gateway
  # ==========================
  api-gateway:
    build: ./api-gateway
    container_name: api_gateway
    ports:
      - "3000:3000"
    depends_on:
      - product-service
      - user-service
    networks:
      - app_network

  # ==========================
  # Product Service (NestJS + mysql)
  # ==========================
  product-service:
    build:
      context: ./product-service
      dockerfile: dockerfile.dev
    container_name: product_service
    restart: always
    ports:
      - "3001:3001"
    environment:
      DATABASE_HOST: product-db
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: APBjg7!RKa!P%t^NWd1y
      DATABASE_NAME: products
    volumes:
      - ./product-service/src:/usr/src/app/src
      - /usr/src/app/node_modules
    depends_on:
      - product-db
    networks:
      - app_network

  product-db:
    image: mysql:8
    container_name: mysql_product
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: APBjg7!RKa!P%t^NWd1y
      MYSQL_DATABASE: products
    volumes:
      - product_data:/var/lib/mysql
      - ./product-service/init:/docker-entrypoint-initdb.d
    networks:
      - app_network

  # ==========================
  # User Service (Express + mysql)
  # ==========================
  user-service:
    build:
      context: ./user-service
      dockerfile: dockerfile.dev
    container_name: user_service
    restart: always
    ports:
      - "3002:3002"
    environment:
      DATABASE_HOST: user-db
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: Dp%mdSM^7MDr3qSQ6Cas
      DATABASE_NAME: users
    volumes:
      - ./user-service/src:/usr/src/app/src
      - /usr/src/app/node_modules
    depends_on:
      - user-db
    networks:
      - app_network

  user-db:
    image: mysql:8
    container_name: mysql_user
    restart: always
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: Dp%mdSM^7MDr3qSQ6Cas
      MYSQL_DATABASE: users
    volumes:
      - user_data:/var/lib/mysql
      - ./user-service/init:/docker-entrypoint-initdb.d
    networks:
      - app_network

   # ==========================
  # Cart Service (Express + MongoDB)
  # ==========================
  cart-service:
    build:
      context: ./cart-service
      dockerfile: dockerfile.dev
    container_name: cart_service
    restart: always
    ports:
      - "3003:3003"
    environment:
      PORT: 3003   # Puerto donde corre Express
      MONGO_URI: mongodb://cart-db:27017/cartdb
    volumes:
      - ./cart-service/src:/usr/src/app/src
      - /usr/src/app/node_modules
    depends_on:
      - cart-db
    networks:
      - app_network

  cart-db:
    image: mongo:latest
    container_name: mongo_cart
    restart: always
    ports:
      - "3309:27017"
    volumes:
      - ./cart-service/mongo_data:/data/db
    networks:
      - app_network

# ==========================
# Volumenes
# ==========================
volumes:
  product_data:
  user_data:
  cart_data:
# ==========================
# Networks
# ==========================
networks:
  app_network:
    driver: bridge
